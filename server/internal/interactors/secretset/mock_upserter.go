// Code generated by MockGen. DO NOT EDIT.
// Source: server/internal/interactors/secretset (interfaces: SecretUpserter)

// Package secretset is a generated GoMock package.
package secretset

import (
	context "context"
	reflect "reflect"
	models "server/internal/models"

	gomock "github.com/golang/mock/gomock"
)

// MockSecretUpserter is a mock of SecretUpserter interface.
type MockSecretUpserter struct {
	ctrl     *gomock.Controller
	recorder *MockSecretUpserterMockRecorder
}

// MockSecretUpserterMockRecorder is the mock recorder for MockSecretUpserter.
type MockSecretUpserterMockRecorder struct {
	mock *MockSecretUpserter
}

// NewMockSecretUpserter creates a new mock instance.
func NewMockSecretUpserter(ctrl *gomock.Controller) *MockSecretUpserter {
	mock := &MockSecretUpserter{ctrl: ctrl}
	mock.recorder = &MockSecretUpserterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecretUpserter) EXPECT() *MockSecretUpserterMockRecorder {
	return m.recorder
}

// SecretUpsert mocks base method.
func (m *MockSecretUpserter) SecretUpsert(arg0 context.Context, arg1 []models.Secret) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SecretUpsert", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SecretUpsert indicates an expected call of SecretUpsert.
func (mr *MockSecretUpserterMockRecorder) SecretUpsert(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SecretUpsert", reflect.TypeOf((*MockSecretUpserter)(nil).SecretUpsert), arg0, arg1)
}
