// Code generated by MockGen. DO NOT EDIT.
// Source: client/internal/secret (interfaces: SecretAccessor)

// Package secret is a generated GoMock package.
package secret

import (
	context "context"
	reflect "reflect"
	models "client/internal/models"

	gomock "github.com/golang/mock/gomock"
)

// MockSecretAccessor is a mock of SecretAccessor interface.
type MockSecretAccessor struct {
	ctrl     *gomock.Controller
	recorder *MockSecretAccessorMockRecorder
}

// MockSecretAccessorMockRecorder is the mock recorder for MockSecretAccessor.
type MockSecretAccessorMockRecorder struct {
	mock *MockSecretAccessor
}

// NewMockSecretAccessor creates a new mock instance.
func NewMockSecretAccessor(ctrl *gomock.Controller) *MockSecretAccessor {
	mock := &MockSecretAccessor{ctrl: ctrl}
	mock.recorder = &MockSecretAccessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecretAccessor) EXPECT() *MockSecretAccessorMockRecorder {
	return m.recorder
}

// SecretList mocks base method.
func (m *MockSecretAccessor) SecretList(arg0 context.Context, arg1 string) ([]models.Secret, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SecretList", arg0, arg1)
	ret0, _ := ret[0].([]models.Secret)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SecretList indicates an expected call of SecretList.
func (mr *MockSecretAccessorMockRecorder) SecretList(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SecretList", reflect.TypeOf((*MockSecretAccessor)(nil).SecretList), arg0, arg1)
}

// SecretShow mocks base method.
func (m *MockSecretAccessor) SecretShow(arg0 context.Context, arg1 string) (models.Secret, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SecretShow", arg0, arg1)
	ret0, _ := ret[0].(models.Secret)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SecretShow indicates an expected call of SecretShow.
func (mr *MockSecretAccessorMockRecorder) SecretShow(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SecretShow", reflect.TypeOf((*MockSecretAccessor)(nil).SecretShow), arg0, arg1)
}

// SecretUpsert mocks base method.
func (m *MockSecretAccessor) SecretUpsert(arg0 context.Context, arg1, arg2, arg3, arg4, arg5, arg6 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SecretUpsert", arg0, arg1, arg2, arg3, arg4, arg5, arg6)
	ret0, _ := ret[0].(error)
	return ret0
}

// SecretUpsert indicates an expected call of SecretUpsert.
func (mr *MockSecretAccessorMockRecorder) SecretUpsert(arg0, arg1, arg2, arg3, arg4, arg5, arg6 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SecretUpsert", reflect.TypeOf((*MockSecretAccessor)(nil).SecretUpsert), arg0, arg1, arg2, arg3, arg4, arg5, arg6)
}
