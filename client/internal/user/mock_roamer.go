// Code generated by MockGen. DO NOT EDIT.
// Source: client/internal/user (interfaces: RemoteUserAccessor)

// Package user is a generated GoMock package.
package user

import (
	models "client/internal/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRemoteUserAccessor is a mock of RemoteUserAccessor interface.
type MockRemoteUserAccessor struct {
	ctrl     *gomock.Controller
	recorder *MockRemoteUserAccessorMockRecorder
}

// MockRemoteUserAccessorMockRecorder is the mock recorder for MockRemoteUserAccessor.
type MockRemoteUserAccessorMockRecorder struct {
	mock *MockRemoteUserAccessor
}

// NewMockRemoteUserAccessor creates a new mock instance.
func NewMockRemoteUserAccessor(ctrl *gomock.Controller) *MockRemoteUserAccessor {
	mock := &MockRemoteUserAccessor{ctrl: ctrl}
	mock.recorder = &MockRemoteUserAccessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRemoteUserAccessor) EXPECT() *MockRemoteUserAccessorMockRecorder {
	return m.recorder
}

// UserGet mocks base method.
func (m *MockRemoteUserAccessor) UserGet(arg0 models.User) (models.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UserGet", arg0)
	ret0, _ := ret[0].(models.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UserGet indicates an expected call of UserGet.
func (mr *MockRemoteUserAccessorMockRecorder) UserGet(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UserGet", reflect.TypeOf((*MockRemoteUserAccessor)(nil).UserGet), arg0)
}

// UserSet mocks base method.
func (m *MockRemoteUserAccessor) UserSet(arg0 models.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UserSet", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UserSet indicates an expected call of UserSet.
func (mr *MockRemoteUserAccessorMockRecorder) UserSet(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UserSet", reflect.TypeOf((*MockRemoteUserAccessor)(nil).UserSet), arg0)
}
